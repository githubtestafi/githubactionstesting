on:
  pull_request_review:
    types: [submitted]
    paths:
        - 'force-app/**'
    
permissions:
  security-events: write
  actions: read
  contents: 'read'
  pull-requests: write

jobs:
  approved:
    if: ${{ github.event.pull_request.base.ref == 'UAT' && github.event.review.state == 'approved' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
        - uses: actions/setup-node@v3
          with:
            node-version: '14'
        - name: 'Checkout source code'
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: 'Install Salesforce CLI'
          run: |
              wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
              mkdir ~/sfdx
              tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
              echo "$HOME/sfdx/bin" >> $GITHUB_PATH
              ~/sfdx/bin/sfdx version
        - name: 'Installing sfdx git delta'
          run: | 
              echo y | sfdx plugins:install sfdx-git-delta
              sfdx plugins 

        # Install java as it is required for the next step
        - name: 'Installing java'
          run: |
            sudo apt-get update
            sudo apt install default-jdk
        - name: 'Installing SFDX scanner'
          run: sfdx plugins:install @salesforce/sfdx-scanner
        - name: 'SFDX_URL secret of QA org'
          shell: bash
          run: |
              echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt
        - name: 'Authenticate to QA Org'
          run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration
        - name: 'Create delta packages for new, modified or deleted metadata'
          run: | 
              mkdir changed-sources
              sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/
          
              sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel NoTestRun  --json
        
        - name: 'Deploy destructive changes (if any)'
          run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings 
